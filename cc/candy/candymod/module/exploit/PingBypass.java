//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\user\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package cc.candy.candymod.module.exploit;

import cc.candy.candymod.module.*;
import cc.candy.candymod.setting.*;
import cc.candy.candymod.event.events.network.*;
import net.minecraft.network.status.client.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import net.minecraftforge.fml.common.eventhandler.*;
import net.minecraft.network.play.server.*;
import net.minecraft.util.*;
import net.minecraft.init.*;
import net.minecraft.entity.*;
import net.minecraft.entity.item.*;
import java.util.*;

public class PingBypass extends Module
{
    public Setting<Boolean> ping;
    public Setting<Boolean> animation;
    public Setting<Boolean> sign;
    public Setting<Boolean> crystal;
    public Setting<Boolean> remove;
    
    public PingBypass() {
        super("PingBypass", Categories.EXPLOIT, false, false);
        this.ping = (Setting<Boolean>)this.register(new Setting("Ping", (T)true));
        this.animation = (Setting<Boolean>)this.register(new Setting("Animation", (T)true));
        this.sign = (Setting<Boolean>)this.register(new Setting("Sign", (T)true));
        this.crystal = (Setting<Boolean>)this.register(new Setting("Crystal", (T)true));
        this.remove = (Setting<Boolean>)this.register(new Setting("Remove", (T)true, v -> this.crystal.getValue()));
    }
    
    @SubscribeEvent(priority = EventPriority.HIGH)
    @Override
    public void onPacketSend(final PacketEvent.Send event) {
        if (!this.isEnable) {
            return;
        }
        final Packet packet = event.getPacket();
        if (packet instanceof CPacketPing && this.ping.getValue()) {
            event.cancel();
        }
        if (packet instanceof CPacketAnimation && this.animation.getValue()) {
            event.cancel();
        }
        if (packet instanceof CPacketUpdateSign && this.sign.getValue()) {
            event.cancel();
        }
    }
    
    @SubscribeEvent(priority = EventPriority.HIGH)
    @Override
    public void onPacketReceive(final PacketEvent.Receive event) {
        if (!this.isEnable) {
            return;
        }
        if (this.crystal.getValue() && event.getPacket() instanceof SPacketSoundEffect && ((SPacketSoundEffect)event.getPacket()).getCategory() == SoundCategory.BLOCKS && ((SPacketSoundEffect)event.getPacket()).getSound() == SoundEvents.ENTITY_GENERIC_EXPLODE) {
            for (final Entity crystal : new ArrayList<Entity>(PingBypass.mc.world.loadedEntityList)) {
                if (crystal instanceof EntityEnderCrystal) {
                    if (this.remove.getValue()) {
                        PingBypass.mc.world.removeEntityFromWorld(crystal.getEntityId());
                    }
                    else {
                        crystal.setDead();
                    }
                }
            }
        }
    }
}
